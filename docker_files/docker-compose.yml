version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: visitor-tracking-app
    restart: unless-stopped
    ports:
      - "5000:5000"
    depends_on:
      - db
    env_file:
      - .docker.env
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres 
      - DB_NAME=besucherdb
      - DATABASE_URL=postgres://postgres:postgres@db:5432/besucherdb
      - COOKIE_SECURE=false
      - COOKIE_SAME_SITE=lax
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:16-alpine
    container_name: visitor-tracking-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=besucherdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres-data:
    driver: local

networks:
  app-network:
    driver: bridge